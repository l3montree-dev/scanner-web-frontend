image: docker:20.10.2

variables:
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - install
    - test
    - publish
    - deploy


gitguardianscan:
    image: gitguardian/ggshield:latest
    stage: install
    script: ggshield secret scan ci

npm:
    image: node:18@sha256:9d8a6466c6385e05f62f8ccf173e80209efb0ff4438f321f09ddf552b05af3ba
    stage: install
    script:
        - npm install
    cache:
      key: $CI_COMMIT_REF_NAME
      paths:
        - node_modules/

jest:
    image: node:18@sha256:9d8a6466c6385e05f62f8ccf173e80209efb0ff4438f321f09ddf552b05af3ba
    stage: test
    script:
        - npm run test
    cache:
      key: $CI_COMMIT_REF_NAME
      paths:
        - node_modules/
    needs: [npm]
    dependencies:
      - npm

build:
    image: docker:19.03.1
    stage: publish
    services:
        - docker:19.03.1-dind
    variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME
        DOCKER_TLS_CERTDIR: ""
        DOCKER_HOST: tcp://localhost:2375
    allow_failure: false
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker pull $IMAGE_TAG || true
        - docker build --network=host --cache-from $IMAGE_TAG -t $IMAGE_TAG .
        - docker push $IMAGE_TAG
    only:
        - main
        - dev
    needs: [jest, gitguardianscan]
    dependencies:
      - jest
      - gitguardianscan
    # when: manual

production-dev:
    stage: deploy
    dependencies:
        - build
    image:
        name: bitnami/kubectl
        entrypoint: [""]
    environment:
        name: development
        url: "https://l3montree.com"
    script:
        - echo "$K8S_DEVELOPMENT_CERTIFICATE" >> ca.pem
        - kubectl --server=$K8S_DEVELOPMENT_API_URL --token=$K8S_DEVELOPMENT_TOKEN --certificate-authority=ca.pem --namespace=ozgsec rollout restart deployment/ozgsec-frontend
    only:
        - dev
    needs: [build]
    # when: manual


production-master:
    stage: deploy
    dependencies:
        - build
    image:
        name: bitnami/kubectl
        entrypoint: [""]
    environment:
        name: production
        url: "https://l3montree.com"
    script:
        - echo "$K8S_CERTIFICATE" >> ca.pem
        - kubectl --server=$K8S_API_URL --token=$K8S_TOKEN --certificate-authority=ca.pem --namespace=ozgsec rollout restart deployment/ozgsec-frontend
    only:
        - main
    when: manual
    needs: [build]