variables:
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - test
    - build
    - scan
    - publish
  
gitguardianscan:
    image: gitguardian/ggshield:v1.13.6@sha256:9dc9cf675acd2c9a59718cb65847a97b4c86e0ce07e7c178265aadd89f11cae1
    stage: test
    script: ggshield secret scan ci
    rules:
      - if: '$CI_COMMIT_REF_PROTECTED == "true"'


jest:
    image: node:18@sha256:9d8a6466c6385e05f62f8ccf173e80209efb0ff4438f321f09ddf552b05af3ba
    stage: test
    script:
        - npm i --include=dev
        - "npx jest --ci --reporters=default --reporters=jest-junit"
    artifacts:
        when: always
        reports:
            junit:
                - junit.xml

.lighthouse:
  image: cypress/browsers:node16.17.0-chrome106
  stage: test
  variables:
    NEXTAUTH_SECRET: TipnQPvS70R6hdyRMr54wdjHLuxtpCmy
  script:
    - npm ci --include=dev
    - npm run build
    - npm run lighthouse -- --output="json,html" $LIGHTHOUSE_ARGUMENTS


lighthouse:desktop:
  extends: .lighthouse
  variables:
    LIGHTHOUSE_ARGUMENTS: '--preset=desktop'
    FORM_FACTOR: 'desktop'
  artifacts:
    when: always
    expose_as: 'Lighthouse Report Desktop'
    paths:
      - .lighthouseci

lighthouse:mobile:
  extends: .lighthouse
  variables:
    LIGHTHOUSE_ARGUMENTS: '--preset=mobile'
    FORM_FACTOR: 'mobile'
  artifacts:
    when: always
    expose_as: 'Lighthouse Report Mobile'
    paths:
      - .lighthouseci

.docker:build:
  stage: build
  needs: [jest, gitguardianscan]
  dependencies:
      - jest
      - gitguardianscan
  image:
      name: gcr.io/kaniko-project/executor:v1.9.1-debug@sha256:ac169723b2076f9d5804f4bc05c98397e286da6fdcdd5a09fdc179f06ccb3be1
      entrypoint: [""]
  script:
      - /kaniko/executor
        --cleanup
        --no-push
        --context $CI_PROJECT_DIR
        --dockerfile $CI_PROJECT_DIR/Dockerfile
        --destination $IMAGE_TAG
        --build-arg
        NEXT_PUBLIC_ENVIRONMENT=$NEXT_PUBLIC_ENVIRONMENT
        --build-arg
        NEXT_PUBLIC_SENTRY_DSN=$NEXT_PUBLIC_SENTRY_DSN
        --tarPath image.tar
  artifacts:
    paths:
    - image.tar
    when: on_success


docker:build:tag:
    extends: .docker:build
    variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
        NEXT_PUBLIC_ENVIRONMENT: production
        SENTRY_RELEASE: $CI_COMMIT_TAG
    only:
        - tags

docker:build:main:
    extends: .docker:build
    variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE:unstable
        NEXT_PUBLIC_ENVIRONMENT: development
    only:
        - main


.trivy:scan:
  stage: scan
  image: aquasec/trivy
  script:
  - trivy image --exit-code 1 --severity CRITICAL --no-progress --input image.tar

trivy:scan:main:
    extends: .trivy:scan
    variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE:unstable
    only:
        - main
  
trivy:scan:tag:
    extends: .trivy:scan
    variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    only:
        - tags



.docker:push:
  stage: publish
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  script:
  - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - crane push image.tar $IMAGE_TAG

docker:push:tag:
    extends: .docker:push
    variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
        NEXT_PUBLIC_ENVIRONMENT: production
    only:
        - tags

docker:push:main:
    extends: .docker:push
    variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE:unstable
        NEXT_PUBLIC_ENVIRONMENT: development
    only:
        - main


helm:
  stage: publish
  image: dtzar/helm-kubectl:3.10.0@sha256:489617317614daad6181603d55319c35529b9d41bfc4a23a11e8e3109a5f5588
  before_script:
    - 'helm repo add --username gitlab-ci-token --password ${CI_JOB_TOKEN} ${CI_PROJECT_NAME} ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable'
    - helm dependency update ./helm-chart
  script:
    - 'helm plugin install https://github.com/chartmuseum/helm-push.git'
    - ./helm-package-and-push.sh
  only:
    - tags

