// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ScanReport {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  ipAddress String? @db.VarChar(255)
  duration  Int

  fqdn   String @db.VarChar(255)
  domain Domain @relation(fields: [fqdn], references: [fqdn])

  SubResourceIntegrity  Boolean?
  NoMixedContent        Boolean?
  ResponsibleDisclosure Boolean?
  DNSSec                Boolean?
  CAA                   Boolean?
  IPv6                  Boolean?
  RPKI                  Boolean?
  HTTP                  Boolean?
  HTTP308               Boolean?
  HTTPRedirectsToHttps  Boolean?

  HTTPS                 Boolean?
  HSTS                  Boolean?
  HSTSPreloaded         Boolean?
  ContentSecurityPolicy Boolean?
  XFrameOptions         Boolean?
  XSSProtection         Boolean?
  ContentTypeOptions    Boolean?

  SecureSessionCookies Boolean?
  TLSv1_2              Boolean?
  TLSv1_3              Boolean?

  TLSv1_1_Deactivated Boolean?
  StrongKeyExchange   Boolean?
  StrongCipherSuites  Boolean?

  ValidCertificate         Boolean?
  StrongPrivateKey         Boolean?
  StrongSignatureAlgorithm Boolean?

  MatchesHostname         Boolean?
  NotRevoked              Boolean?
  CertificateTransparency Boolean?
  ValidCertificateChain   Boolean?

  @@index([createdAt])

  @@index([fqdn])
  @@index([SubResourceIntegrity])
  @@index([NoMixedContent])
  @@index([ResponsibleDisclosure])
  @@index([DNSSec])
  @@index([CAA])
  @@index([IPv6])
  @@index([RPKI])
  @@index([HTTP])
  @@index([HTTP308])
  @@index([HTTPRedirectsToHttps])
  @@index([HTTPS])
  @@index([HSTS])
  @@index([HSTSPreloaded])
  @@index([ContentSecurityPolicy])
  @@index([XFrameOptions])
  @@index([XSSProtection])
  @@index([ContentTypeOptions])
  @@index([SecureSessionCookies])
  @@index([TLSv1_2])
  @@index([TLSv1_3])
  @@index([TLSv1_1_Deactivated])
  @@index([StrongKeyExchange])
  @@index([StrongCipherSuites])
  @@index([ValidCertificate])
  @@index([StrongPrivateKey])
  @@index([StrongSignatureAlgorithm])
  @@index([MatchesHostname])
  @@index([NotRevoked])
  @@index([CertificateTransparency])
  @@index([ValidCertificateChain])
  @@map("scan_reports")
}

model Dashboard {
  id Int @id @default(autoincrement())

  content Json

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("dashboards")
}

model Domain {
  fqdn String @id

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  lastScan   BigInt?
  errorCount Int     @default(0)
  queued     Boolean @default(false)

  // pretty much the reason why this domain is part of the system at all.
  group String @db.VarChar(255)

  users UserDomainRelation[]

  scanReports ScanReport[]

  // the full report
  details Json?

  monitor Boolean @default(true)

  @@index([group])
  @@map("domains")

  @@fulltext([fqdn])
}

model UserDomainRelation {
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  domain   Domain @relation(fields: [fqdn], references: [fqdn])
  fqdn String

  @@id([userId, fqdn])
  @@map("user_domain_relations")
}

model User {
  id         String               @id
  role       String?
  domains    UserDomainRelation[]
  dashboards Dashboard[]

  @@map("users")
}

model Network {
  cidr               String  @id
  prefixLength       Int
  networkAddress     String
  startAddress       String
  endAddress         String
  startAddressNumber BigInt
  endAddressNumber   BigInt
  comment            String?

  @@map("networks")
}
